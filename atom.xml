<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>欢迎来到lionsom的blog</title>
  
  <subtitle>人生苦短，天马行空！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-03-15T16:00:00.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Lionsom</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo+github搭建myblog完整版</title>
    <link href="http://yoursite.com/2018/03/16/Hexo-github%E6%90%AD%E5%BB%BAmyblog%E5%AE%8C%E6%95%B4%E7%89%88/"/>
    <id>http://yoursite.com/2018/03/16/Hexo-github搭建myblog完整版/</id>
    <published>2018-03-16T07:34:48.000Z</published>
    <updated>2018-03-15T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="Part-One-Hexo本地搭建运行"><a href="#Part-One-Hexo本地搭建运行" class="headerlink" title="Part One - Hexo本地搭建运行"></a>Part One - Hexo本地搭建运行</h1><hr><h3 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h3><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo官网</a><br><a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs官网</a></p><h3 id="1-1、Hexo安装的前提"><a href="#1-1、Hexo安装的前提" class="headerlink" title="1.1、Hexo安装的前提"></a>1.1、Hexo安装的前提</h3><ul><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a> 需要先安装 按照流程安装即可！</li><li>npm      与Nodejs一起安装完成，不需要单独安装！</li><li><a href="https://git-scm.com" target="_blank" rel="noopener">Git</a>     Mac系统自带无需安装</li></ul><h3 id="1-2、安装-Hexo"><a href="#1-2、安装-Hexo" class="headerlink" title="1.2、安装 Hexo"></a>1.2、安装 Hexo</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p><strong>注意：此处可能需要root权限</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---切换root---</span><br><span class="line">LionsomMBP:~ lionsom$ sudo -i </span><br><span class="line"></span><br><span class="line">---切换lionsom普通用户---</span><br><span class="line">LionsomMBP:~ root# su - lionsom</span><br></pre></td></tr></table></figure><p><img src="/assets/img/Hexo-github搭建myblog完整版/001.jpg" alt="npm install -g hexo-cli"></p><h3 id="1-3、安装Hexo完成，则开始初始化hexo"><a href="#1-3、安装Hexo完成，则开始初始化hexo" class="headerlink" title="1.3、安装Hexo完成，则开始初始化hexo"></a>1.3、安装Hexo完成，则开始初始化hexo</h3><ul><li>创建一个文件夹myblog</li><li>进入myblog</li><li><p>hexo init<br><img src="/Users/lionsom/Downloads/Hexo搭建图片/hexo_init.jpg" alt="hexo init"></p></li><li><p>文件目录结构<br><img src="/Users/lionsom/Downloads/Hexo搭建图片/myblog目录.jpg" alt="myblog生成点文件目录"></p></li></ul><h3 id="1-4、依赖包与插件的安装"><a href="#1-4、依赖包与插件的安装" class="headerlink" title="1.4、依赖包与插件的安装"></a>1.4、依赖包与插件的安装</h3><ul><li>执行以下命令，进行依赖包的安装，<ul><li>node_modules: 关联保存了将会使用到的hexo依赖包<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install</span><br></pre></td></tr></table></figure></li></ul></li></ul><pre><code>![依赖包安装](/Users/lionsom/Downloads/Hexo搭建图片/依赖包安装.jpg)</code></pre><ul><li>安装相关插件<ul><li><strong>重要：安装便于自动部署到Github上的插件</strong>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li></ul></li></ul><pre><code>* 安装atom生成插件，便于感兴趣的小伙伴们订阅    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>* 安装博客首页生成插件    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-index --save</span><br></pre></td></tr></table></figure>* 安装归档生成插件    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-archive --save</span><br></pre></td></tr></table></figure>* 安装tag生成插件    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-tag --save</span><br></pre></td></tr></table></figure>* 安装category生成插件    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-category --save</span><br></pre></td></tr></table></figure>* 安装Sitemap文件生成插件    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>* 安装百度Sitemap文件生成插件，因为普通的Sitemap格式不符合百度的要求    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure></code></pre><h3 id="1-5、本地启动Hexo"><a href="#1-5、本地启动Hexo" class="headerlink" title="1.5、本地启动Hexo"></a>1.5、本地启动Hexo</h3><h4 id="操作指令一览表"><a href="#操作指令一览表" class="headerlink" title="操作指令一览表"></a>操作指令一览表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean      #清理缓存</span><br><span class="line">$ hexo generate   #生成静态文件</span><br><span class="line">$ hexo server  #启动本地服务器</span><br><span class="line">或者</span><br><span class="line">$ hexo clean      #清理缓存</span><br><span class="line">$ hexo g          #生成静态文件</span><br><span class="line">$ hexo s          #启动本地服务器</span><br></pre></td></tr></table></figure><ul><li>前往myblog目录 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &quot;test&quot;</span><br></pre></td></tr></table></figure></li></ul><p><img src="/Users/lionsom/Downloads/Hexo搭建图片/创建新blog.jpg" alt="创建新blog"></p><ul><li><p>在生成路径下查看<br><img src="/Users/lionsom/Downloads/Hexo搭建图片/新blog路径.jpg" alt="路径"></p></li><li><p>Hexo本地生成</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>  <img src="/Users/lionsom/Downloads/Hexo搭建图片/Hexo本地generate.jpg" alt="Hexo本地生成"></p></li><li><p>Hexo本地运行</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p><img src="/Users/lionsom/Downloads/Hexo搭建图片/Hexo本地运行.jpg" alt="hexo本地运行"></p><p> <img src="/Users/lionsom/Downloads/Hexo搭建图片/Hexo本地运行效果图.jpg" alt="Hexo本地运行效果图"></p><hr><h1 id="Part-Two-github仓库创建和配置"><a href="#Part-Two-github仓库创建和配置" class="headerlink" title="Part Two - github仓库创建和配置"></a>Part Two - github仓库创建和配置</h1><hr><h3 id="2-1、github仓库创建"><a href="#2-1、github仓库创建" class="headerlink" title="2.1、github仓库创建"></a>2.1、github仓库创建</h3><ul><li>仓库名字必须是<strong>『username.github.io』</strong>格式；</li><li>创建GitHub Pages<br><img src="/Users/lionsom/Downloads/Hexo搭建图片/GitHub_Pages创建.jpg" alt="GitHub Pages创建"></li></ul><h3 id="2-2、配置git"><a href="#2-2、配置git" class="headerlink" title="2.2、配置git"></a>2.2、配置git</h3><ul><li><p>设置用户名和邮箱</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.email &quot;lionsom_lin@qq.com&quot;</span><br><span class="line">$ git config --global user.name &quot;lionsom&quot;</span><br></pre></td></tr></table></figure></li><li><p>根据邮箱生成密钥 - 如下图，如无特殊需求</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;lionsom_lin@qq.com&quot;</span><br></pre></td></tr></table></figure><p>  <img src="/Users/lionsom/Downloads/Hexo搭建图片/密钥生成1.jpg" alt="生成密钥具体操作"></p></li><li><p>查看生成的密钥-在隐藏文件 <strong>.ssh</strong> 中，其中<code>id_rsa</code>是私钥，<code>id_rsa.pub</code>是公钥<br><img src="/Users/lionsom/Downloads/Hexo搭建图片/生成的密钥.jpg" alt="密钥生成路径"></p></li><li><p><code>ssh-agent</code>代管理git<strong>私钥</strong></p><ul><li><code>ssh-agent</code>是一个密钥管理器，运行<code>ssh-agent</code>以后，使用<code>ssh-add</code>将私钥交给<code>ssh-agent</code>保管，其他程序需要身份验证的时候可以将验证申请交给<code>ssh-agent</code>来完成整个认证过程。 </li></ul></li><li><p>添加<code>SSH Key</code>到<code>ssh-agent</code></p><ul><li><p>执行命令 获取 <code>agent pid 59566</code></p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ eval $(ssh-agent -s)</span><br></pre></td></tr></table></figure></li><li><p>添加<code>id_rsa</code></p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-add /Users/lionsom/.ssh/id_rsa</span><br></pre></td></tr></table></figure></li></ul></li><li><p>将生成的公钥 配置到 github</p><ul><li>记事本打开<code>id_rsa.pub</code>密钥，复制内容，前往github账户中心<code>Settings</code>,进行如下图操作。<br><img src="/Users/lionsom/Downloads/Hexo搭建图片/公钥添加到github.jpg" alt="公钥添加"></li></ul></li><li><p>验证<strong>SSH</strong>是否配置完成</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>  成功则出现</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You&apos;ve successfully authenticated, but github does not provide shell access.</span><br></pre></td></tr></table></figure><p>  如图：<br><img src="/Users/lionsom/Downloads/Hexo搭建图片/密钥添加.jpg" alt="添加是否完成"></p></li></ul><hr><h1 id="Part-Three-本地Hexo关联github"><a href="#Part-Three-本地Hexo关联github" class="headerlink" title="Part Three - 本地Hexo关联github"></a>Part Three - 本地Hexo关联github</h1><hr><h3 id="3-1、配置-config-yml"><a href="#3-1、配置-config-yml" class="headerlink" title="3.1、配置_config.yml"></a>3.1、配置<strong>_config.yml</strong></h3><p><img src="/Users/lionsom/Downloads/Hexo搭建图片/_config.yml.jpg" alt="具体配置"></p><h3 id="3-2、前往Hexo本地目录生成静态网页并Deploy到github"><a href="#3-2、前往Hexo本地目录生成静态网页并Deploy到github" class="headerlink" title="3.2、前往Hexo本地目录生成静态网页并Deploy到github"></a>3.2、前往Hexo本地目录生成静态网页并Deploy到github</h3><ul><li>确认依赖包和插件安装完成，特别是<code>hexo-deployer-git</code>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>指令操作</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean  #清理缓存</span><br><span class="line">$ hexo g      #生成静态文件</span><br><span class="line">$ hexo d      #部署</span><br><span class="line">或 $ hexo deploy</span><br></pre></td></tr></table></figure></li><li><p>实际操作图</p><ul><li>清理缓存+重新生成静态文件<br><img src="/Users/lionsom/Downloads/Hexo搭建图片/clean+generate.jpg" alt="清理缓存+重新生成静态文件"></li><li>部署到github<br><img src="/Users/lionsom/Downloads/Hexo搭建图片/deploy.jpg" alt="部署到github"></li></ul></li><li><p>输入<a href="https://lionsom.github.io" target="_blank" rel="noopener">https://lionsom.github.io</a>查看<br>  <img src="/Users/lionsom/Downloads/Hexo搭建图片/部署成功.jpg" alt="部署成功"></p></li></ul><hr><hr><h1 id="以上就能实现基本的个人blog"><a href="#以上就能实现基本的个人blog" class="headerlink" title="以上就能实现基本的个人blog"></a>以上就能实现基本的个人blog</h1><hr><hr><h4 id="参考文档："><a href="#参考文档：" class="headerlink" title="参考文档："></a>参考文档：</h4><ul><li><a href="https://www.jianshu.com/p/148f8d803e80" target="_blank" rel="noopener">我特么搭个博客容易么[Hexo+githubPages]（一）</a></li><li><a href="https://www.jianshu.com/p/f47ac6081f30" target="_blank" rel="noopener">我特么搭个博客容易么[Hexo+githubPages]（二）</a></li><li><a href="https://www.jianshu.com/p/fae0d7ecc486" target="_blank" rel="noopener">我特么搭个博客容易么[Hexo+githubPages]（三）</a></li><li><a href="https://www.jianshu.com/p/a1778c515a33" target="_blank" rel="noopener">使用Hexo在GitHub Pages上搭建部署免费的个人博客网站（上：GitHub搭建）——最详细全面解读教程（没有之一）</a></li><li><a href="https://www.jianshu.com/p/c9295bacd98b" target="_blank" rel="noopener">使用Hexo在GitHub Pages上搭建部署免费的个人博客网站（下：Hexo部署）——最详细全面解读教程（没有之一）</a></li></ul><hr><h1 id="Part-Four-绑定域名并设置域名解析"><a href="#Part-Four-绑定域名并设置域名解析" class="headerlink" title="Part Four - 绑定域名并设置域名解析"></a>Part Four - 绑定域名并设置域名解析</h1><hr><blockquote><p><strong>GitHub为我们每个注册的用户提供了一个唯一的 <code>username.github.io</code> 网址，GitHub服务器会帮我们托管这个 <code>username.github.io</code> 所用到的全部代码，自动运行，所以我们就不需要购买服务器或者云主机来自己运行了。但是，我们之所以购买域名，就是不想总是通过 <code>username.github.io</code> 来访问我们的个人网站，而是希望通过自己的独立域名来访问。把 <code>username.github.io</code> 和自己购买的域名相关联</strong></p></blockquote><h2 id="方法一：（不推荐）"><a href="#方法一：（不推荐）" class="headerlink" title="方法一：（不推荐）"></a>方法一：（不推荐）</h2><h4 id="1、进入github项目中的Settings中，找到Github-Pages中的Custom-domain，输入自己的域名，点击Save即可。"><a href="#1、进入github项目中的Settings中，找到Github-Pages中的Custom-domain，输入自己的域名，点击Save即可。" class="headerlink" title="1、进入github项目中的Settings中，找到Github Pages中的Custom domain，输入自己的域名，点击Save即可。"></a>1、进入github项目中的<code>Settings</code>中，找到<code>Github Pages</code>中的<code>Custom domain</code>，输入自己的域名，点击Save即可。</h4><p><img src="/Users/lionsom/Downloads/Hexo搭建图片/github域名添加.jpg" alt="github域名添加"></p><h4 id="2、查看项目中多了-CNAME-文件"><a href="#2、查看项目中多了-CNAME-文件" class="headerlink" title="2、查看项目中多了 CNAME 文件"></a>2、查看项目中多了 <code>CNAME</code> 文件</h4><p><img src="/Users/lionsom/Downloads/Hexo搭建图片/github域名添加成功.jpg" alt="github域名添加成功"></p><h4 id="3、域名解析"><a href="#3、域名解析" class="headerlink" title="3、域名解析"></a>3、域名解析</h4><ul><li>记录类型：CNAME，主机记录：@，记录值一定要是 username.github.io，TTL：一般都是10分钟。<br><img src="/Users/lionsom/Downloads/Hexo搭建图片/域名解析设置.jpg" alt="域名解析"></li></ul><h4 id="4、检测是否绑定成功"><a href="#4、检测是否绑定成功" class="headerlink" title="4、检测是否绑定成功"></a>4、检测是否绑定成功</h4><p><img src="/Users/lionsom/Downloads/Hexo搭建图片/域名解析成功.jpg" alt="域名解析成功"></p><h4 id="5、此方法弊端"><a href="#5、此方法弊端" class="headerlink" title="5、此方法弊端"></a>5、此方法弊端</h4><p>如果重新generate并deploy，域名与<code>username.github.io</code>关联失效，需要重新设置一遍。</p><h2 id="方式二：（推荐）"><a href="#方式二：（推荐）" class="headerlink" title="方式二：（推荐）"></a>方式二：（推荐）</h2><h4 id="1、在本地hexo根目录-》source中创建文件『CNAME』，写入域名lionsom-com"><a href="#1、在本地hexo根目录-》source中创建文件『CNAME』，写入域名lionsom-com" class="headerlink" title="1、在本地hexo根目录-》source中创建文件『CNAME』，写入域名lionsom.com"></a>1、在本地hexo根目录-》source中创建文件『CNAME』，写入域名<code>lionsom.com</code></h4><p><img src="/Users/lionsom/Downloads/Hexo搭建图片/本地创建CNAME文件.jpg" alt="操作如图"></p><h4 id="2、重新部署一次，查看结果"><a href="#2、重新部署一次，查看结果" class="headerlink" title="2、重新部署一次，查看结果"></a>2、重新部署一次，查看结果</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean  #清理缓存</span><br><span class="line">$ hexo g      #生成静态文件</span><br><span class="line">$ hexo d      #部署</span><br></pre></td></tr></table></figure><p><img src="/Users/lionsom/Downloads/Hexo搭建图片/github多出CNAME文件.jpg" alt="多出CNAME文件"></p><p><img src="/Users/lionsom/Downloads/Hexo搭建图片/域名解析成功2.jpg" alt="解析成功"></p><h4 id="域名绑定完成！！"><a href="#域名绑定完成！！" class="headerlink" title="域名绑定完成！！"></a>域名绑定完成！！</h4><hr><h1 id="Part-Five-Hexo日常操作"><a href="#Part-Five-Hexo日常操作" class="headerlink" title="Part Five - Hexo日常操作"></a>Part Five - Hexo日常操作</h1><hr><h3 id="官网-1"><a href="#官网-1" class="headerlink" title="官网"></a>官网</h3><p><a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="noopener">hexo官网使用-基本操作</a></p><h3 id="5-1、进行常用的配置"><a href="#5-1、进行常用的配置" class="headerlink" title="5.1、进行常用的配置"></a>5.1、进行常用的配置</h3><h4 id="5-1-1、layout设置"><a href="#5-1-1、layout设置" class="headerlink" title="5.1.1、layout设置"></a>5.1.1、layout设置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>，<br>默认为 <code>post</code>，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局。</p><h4 id="5-1-2、文件名称设置"><a href="#5-1-2、文件名称设置" class="headerlink" title="5.1.2、文件名称设置"></a>5.1.2、文件名称设置</h4><p>Hexo 默认以标题做为文件名称，但您可编辑 new_post_name 参数来改变默认的文件名称。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Writing</span><br><span class="line">new_post_name: :year-:month-:day-:title.md</span><br></pre></td></tr></table></figure><h4 id="5-1-3、模版（Scaffold）设置"><a href="#5-1-3、模版（Scaffold）设置" class="headerlink" title="5.1.3、模版（Scaffold）设置"></a>5.1.3、模版（Scaffold）设置</h4><p><a href="https://hexo.io/zh-cn/docs/front-matter.html" target="_blank" rel="noopener">hexo官网使用-Front-matter</a></p><p><img src="/Users/lionsom/Downloads/Hexo搭建图片/front-matter.jpg" alt="front-matter"></p><p><img src="/Users/lionsom/Downloads/Hexo搭建图片/Scaffold设置.jpg" alt="Scaffold设置"></p><h4 id="5-1-4、资源设置-图片等"><a href="#5-1-4、资源设置-图片等" class="headerlink" title="5.1.4、资源设置-图片等"></a>5.1.4、资源设置-图片等</h4><p><a href="https://hexo.io/zh-cn/docs/asset-folders.html" target="_blank" rel="noopener">hexo官网使用-资源文件夹</a></p><blockquote><p>文章资源文件夹</p></blockquote><p>当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new [layout] &lt;title&gt;</code> 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个 markdown 文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">_config.yml</span><br><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p><strong>使用相对路径进行资源引用：<code>./XXXX.jpg</code></strong></p><h3 id="5-2、创建新blog"><a href="#5-2、创建新blog" class="headerlink" title="5.2、创建新blog"></a>5.2、创建新blog</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new blog_name</span><br></pre></td></tr></table></figure><p>生成两个文件：blog_name.md 和 blog_name资源文件夹</p><hr><h1 id="Part-Six-Hexo主题更换"><a href="#Part-Six-Hexo主题更换" class="headerlink" title="Part Six - Hexo主题更换"></a>Part Six - Hexo主题更换</h1><hr><h3 id="6-1、主题设置"><a href="#6-1、主题设置" class="headerlink" title="6.1、主题设置"></a>6.1、主题设置</h3><p><a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener">github主题列表地址</a></p><p><a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">hexo-theme-yilia</a></p><h4 id="6-1-1、将主题clone到themes文件夹中"><a href="#6-1-1、将主题clone到themes文件夹中" class="headerlink" title="6.1.1、将主题clone到themes文件夹中"></a>6.1.1、将主题clone到themes文件夹中</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LionsomMBP:myblog lionsom$ cd themes/</span><br><span class="line">LionsomMBP:themes lionsom$ git clone https://github.com/litten/hexo-theme-yilia.git</span><br></pre></td></tr></table></figure><h4 id="6-1-2、修改Hexo的-config-yml文件配置"><a href="#6-1-2、修改Hexo的-config-yml文件配置" class="headerlink" title="6.1.2、修改Hexo的_config.yml文件配置"></a>6.1.2、修改Hexo的_config.yml文件配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: hexo-theme-yilia</span><br></pre></td></tr></table></figure><h4 id="6-1-3、重新加载"><a href="#6-1-3、重新加载" class="headerlink" title="6.1.3、重新加载"></a>6.1.3、重新加载</h4><p><img src="/Users/lionsom/Downloads/Hexo搭建图片/主题更换成功.jpg" alt="显示主题效果"></p><h3 id="6-2、yilia主题内部设置"><a href="#6-2、yilia主题内部设置" class="headerlink" title="6.2、yilia主题内部设置"></a>6.2、yilia主题内部设置</h3><ul><li><p>直接参考yilia原版配置，参考配置即可！！</p><ul><li><p><a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">hexo-theme-yilia 官网</a></p></li><li><p><a href="https://github.com/litten/BlogBackup" target="_blank" rel="noopener">yilia-BlogBackup 样例</a></p></li></ul></li><li><p>具体配置中遇到个小麻烦-目录显示不出来<br>  <img src="/Users/lionsom/Downloads/Hexo搭建图片/yilia配置.jpg" alt="目录显示不出来"></p><ul><li>严格按照上述配置即可！</li></ul></li><li><p>yilia内部资源路径的问题</p></li></ul><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#你的头像url</span><br><span class="line">avatar: /assets/img/wechatpay.jpg</span><br></pre></td></tr></table></figure>* 这里的路径是Hexo根目录下source下点资源，* 完整的路径是指Hexo/source/assets/img/wechatpay.jpg</code></pre><hr><h1 id="Part-Seven-实战中的一些问题"><a href="#Part-Seven-实战中的一些问题" class="headerlink" title="Part Seven - 实战中的一些问题"></a>Part Seven - 实战中的一些问题</h1><hr><h3 id="7-1、图片资源加载不出来的问题"><a href="#7-1、图片资源加载不出来的问题" class="headerlink" title="7.1、图片资源加载不出来的问题"></a>7.1、图片资源加载不出来的问题</h3><p><img src="/Users/lionsom/Downloads/Hexo搭建图片/图片加载异常1.jpg" alt=""></p><p><img src="/Users/lionsom/Downloads/Hexo搭建图片/图片加载异常2.jpg" alt=""></p><p>根据上图点结论，所以，资源路径不推荐5.1.4所推荐的设置，依旧推荐在</p><p><img src="/Users/lionsom/Downloads/Hexo搭建图片/图片推荐路径.jpg" alt="推荐路径"></p><h4 id="使用路径-assets-img-myhead-jpg"><a href="#使用路径-assets-img-myhead-jpg" class="headerlink" title="使用路径 /assets/img/myhead/jpg"></a>使用路径 /assets/img/myhead/jpg</h4><hr><h1 id="完结！！"><a href="#完结！！" class="headerlink" title="完结！！"></a>完结！！</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h1 id=&quot;Part-One-Hexo本地搭建运行&quot;&gt;&lt;a href=&quot;#Part-One-Hexo本地搭建运行&quot; class=&quot;headerlink&quot; title=&quot;Part One - Hexo本地搭建运行&quot;&gt;&lt;/a&gt;Part One - Hexo本地搭建运行&lt;
      
    
    </summary>
    
      <category term="myblog搭建" scheme="http://yoursite.com/categories/myblog%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
</feed>
